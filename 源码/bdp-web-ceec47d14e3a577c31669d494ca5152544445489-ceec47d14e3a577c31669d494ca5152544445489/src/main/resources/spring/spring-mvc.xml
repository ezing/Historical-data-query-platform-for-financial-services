<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<description>Spring MVC Configuration</description>

	<!-- 1、开启spring mvc注解模式 -->
	<!-- 简化配置：添加注解驱动 ;扩充了注解驱动,可以将请求参数绑定到控制器参数 (1)自动注册DefaulAnnotationHandlerMapping,AnnotationMethodHandlerAdapter 
		(2)提供一系列：数据绑定/数字/日期的format @NumberFormat,@DataTimeFormat, xml,json默认读写支持 -->
	<mvc:annotation-driven enable-matrix-variables="true" />

	<!-- 2、静态资源配置 (1)加入对静态资源的处理 js,jpg (2)允许使用"/"做整体映射 -->
	<mvc:default-servlet-handler />


	<!-- 2) 配置ViewResolver，定义跳转的文件的前后缀。 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="1" />
	</bean>

	<!-- DispatcherServlet上下文， 只管理@Controller类型的bean， 忽略其他型的bean, 如@Service（通过spring处理） -->
	<!-- 检测这些类并注册相应Bean：让Bean定义注解工作起来,也就是上述传统声明方式。 它的base-package属性指定了需要扫描的类包，类包及其递归子包中所有的类都会被处理。 
		该配置项其实也包含了自动注入上述processor的功能，因此当使用<context:component-scan/>后，即可将<context:annotation-config/>省去。 -->
	<!-- 4、扫描web相关的Bean 使用Annotation自动注册Bean,只扫描@Controller -->
	<context:component-scan base-package="cn.com"
		use-default-filters="false"><!-- base-package 如果多个，用“,”分隔 -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" /> <!-- 子标签是用来添加扫描注解的 -->
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Service" />
	</context:component-scan>

	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/auth/**" />
			<mvc:exclude-mapping path="/resource/**" />
			<bean class="cn.com.infohold.commons.filter.LoginIntercepter"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	<!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="mappingJacksonHttpMessageConverter" />	<!-- JSON转换器 -->
			</list>
		</property>
	</bean>


</beans>